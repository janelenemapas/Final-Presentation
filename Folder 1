import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: const MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  const MyHomePage({Key? key}) : super(key: key);

  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.blue,
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'Lets learn Geography',
              style: TextStyle(
                fontSize: 40,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 30),
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const QuizPage1(score: 0)),
                );
              },
              child: const Text('Start'),
            ),
          ],
        ),
      ),
    );
  }
}

class QuizPage1 extends StatefulWidget {
  final int score;
  const QuizPage1({Key? key, required this.score}) : super(key: key);

  _QuizPage1State createState() => _QuizPage1State();
}

class _QuizPage1State extends State<QuizPage1> {
  bool? _isCorrect;

  void _checkAnswer(bool isCorrect) {
    setState(() {
      _isCorrect = isCorrect;
    });
    Future.delayed(const Duration(seconds: 1), () {
      Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => QuizPage2(score: widget.score + (isCorrect ? 1 : 0))),
      );
    });
  }

  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.blue,
      appBar: AppBar(
        title: const Text('Quiz'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'Fill in the blank:',
              style: TextStyle(
                fontSize: 24,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 20),
            const Text(
              'The capital of France is ___________.',
              style: TextStyle(
                fontSize: 20,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 20),
            QuizOption(
              optionText: 'London',
              isCorrect: false,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == false,
            ),
            QuizOption(
              optionText: 'Paris',
              isCorrect: true,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == true,
            ),
            QuizOption(
              optionText: 'Berlin',
              isCorrect: false,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == false,
            ),
          ],
        ),
      ),
    );
  }
}

class QuizPage2 extends StatefulWidget {
  final int score;
  const QuizPage2({Key? key, required this.score}) : super(key: key);

  _QuizPage2State createState() => _QuizPage2State();
}

class _QuizPage2State extends State<QuizPage2> {
  bool? _isCorrect;

  void _checkAnswer(bool isCorrect) {
    setState(() {
      _isCorrect = isCorrect;
    });
    Future.delayed(const Duration(seconds: 1), () {
      Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => QuizPage3(score: widget.score + (isCorrect ? 1 : 0))),
      );
    });
  }

  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.blue,
      appBar: AppBar(
        title: const Text('Quiz'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'Fill in the blank:',
              style: TextStyle(
                fontSize: 24,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 20),
            const Text(
              'The capital of Germany is ___________.',
              style: TextStyle(
                fontSize: 20,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 20),
            QuizOption(
              optionText: 'London',
              isCorrect: false,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == false,
            ),
            QuizOption(
              optionText: 'Paris',
              isCorrect: false,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == false,
            ),
            QuizOption(
              optionText: 'Berlin',
              isCorrect: true,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == true,
            ),
          ],
        ),
      ),
    );
  }
}

class QuizPage3 extends StatefulWidget {
  final int score;
  const QuizPage3({Key? key, required this.score}) : super(key: key);

  _QuizPage3State createState() => _QuizPage3State();
}

class _QuizPage3State extends State<QuizPage3> {
  bool? _isCorrect;

  void _checkAnswer(bool isCorrect) {
    setState(() {
      _isCorrect = isCorrect;
    });
    Future.delayed(const Duration(seconds: 1), () {
      Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => QuizPage4(score: widget.score + (isCorrect ? 1 : 0))),
      );
    });
  }

  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.blue,
      appBar: AppBar(
        title: const Text('Quiz'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'Fill in the blank:',
              style: TextStyle(
                fontSize: 24,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 20),
            const Text(
              'The capital of Italy is ___________.',
              style: TextStyle(
                fontSize: 20,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 20),
            QuizOption(
              optionText: 'Madrid',
              isCorrect: false,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == false,
            ),
            QuizOption(
              optionText: 'Rome',
              isCorrect: true,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == true,
            ),
            QuizOption(
              optionText: 'Lisbon',
              isCorrect: false,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == false,
            ),
          ],
        ),
      ),
    );
  }
}

class QuizPage4 extends StatefulWidget {
  final int score;
  const QuizPage4({Key? key, required this.score}) : super(key: key);

  _QuizPage4State createState() => _QuizPage4State();
}

class _QuizPage4State extends State<QuizPage4> {
  bool? _isCorrect;

  void _checkAnswer(bool isCorrect) {
    setState(() {
      _isCorrect = isCorrect;
    });
    Future.delayed(const Duration(seconds: 1), () {
      Navigator.push(
        context,
        MaterialPageRoute(builder: (context) => FinalPage(score: widget.score + (isCorrect ? 1 : 0))),
      );
    });
  }

  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.blue,
      appBar: AppBar(
        title: const Text('Quiz'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'Fill in the blank:',
              style: TextStyle(
                fontSize: 24,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 20),
            const Text(
              'The capital of Spain is ___________.',
              style: TextStyle(
                fontSize: 20,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 20),
            QuizOption(
              optionText: 'Madrid',
              isCorrect: true,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == true,
            ),
            QuizOption(
              optionText: 'Barcelona',
              isCorrect: false,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == false,
            ),
            QuizOption(
              optionText: 'Seville',
              isCorrect: false,
              checkAnswer: _checkAnswer,
              isSelected: _isCorrect == false,
            ),
          ],
        ),
      ),
    );
  }
}

class FinalPage extends StatelessWidget {
  final int score;
  const FinalPage({Key? key, required this.score}) : super(key: key);

  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.blue,
      appBar: AppBar(
        title: const Text('Quiz Complete'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'Congratulations!',
              style: TextStyle(
                fontSize: 24,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 20),
            Text(
              'You have completed the quiz with a score of $score.',
              style: const TextStyle(
                fontSize: 20,
                color: Colors.white,
              ),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                Navigator.pushAndRemoveUntil(
                  context,
                  MaterialPageRoute(builder: (context) => const MyHomePage()),
                  (Route<dynamic> route) => false,
                );
              },
              child: const Text('Restart Quiz'),
            ),
          ],
        ),
      ),
    );
  }
}

class QuizOption extends StatelessWidget {
  final String optionText;
  final bool isCorrect;
  final Function(bool) checkAnswer;
  final bool isSelected;

  const QuizOption({
    Key? key,
    required this.optionText,
    required this.isCorrect,
    required this.checkAnswer,
    required this.isSelected,
  }) : super(key: key);

  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 10),
      child: ElevatedButton(
        onPressed: () {
          checkAnswer(isCorrect);
        },
        style: ButtonStyle(
          backgroundColor: WidgetStateProperty.resolveWith<Color?>(
            (Set<WidgetState> states) {
              if (isSelected) {
                return isCorrect ? Colors.green : Colors.red;
              }
              return null;
            },
          ),
        ),
        child: Text(optionText),
      ),
    );
  }
}
